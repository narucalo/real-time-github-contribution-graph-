{"ast":null,"code":"import React,{useEffect,useRef}from'react';import*as d3 from'd3';import{getColorForType}from'../utils/colorMapping';import{jsx as _jsx}from\"react/jsx-runtime\";const ContributionHeatmap=_ref=>{let{data}=_ref;const svgRef=useRef();useEffect(()=>{if(!data)return;const width=800;const height=400;const margin={top:20,right:20,bottom:20,left:50};// Remove any previous SVG\nd3.select(svgRef.current).selectAll('*').remove();// Create an SVG element\nconst svg=d3.select(svgRef.current).attr('width',width+margin.left+margin.right).attr('height',height+margin.top+margin.bottom).append('g').attr('transform',`translate(${margin.left},${margin.top})`);// Parse the data\nconst parseDate=d3.timeParse('%Y-%m-%d');const formattedData=data.map(d=>({...d,date:parseDate(d.date),total:d.commits+d.pullRequests+d.issues+d.codeReviews}));// Set up scales\nconst x=d3.scaleTime().domain(d3.extent(formattedData,d=>d.date)).range([0,width]);const y=d3.scaleBand().domain(['commits','pullRequests','issues','codeReviews']).range([height,0]).padding(0.1);// Draw the heatmap rectangles\nsvg.selectAll('.rect').data(formattedData).enter().append('rect').attr('x',d=>x(d.date)).attr('y',d=>y('commits'))// You can modify this to y(d.type) if 'type' is part of the data\n.attr('width',width/formattedData.length-1).attr('height',y.bandwidth()).attr('fill',d=>getColorForType('commits'));// Use getColorForType here\n// Add X axis\nsvg.append('g').attr('transform',`translate(0,${height})`).call(d3.axisBottom(x).ticks(d3.timeMonth));// Add Y axis\nsvg.append('g').call(d3.axisLeft(y));},[data]);return/*#__PURE__*/_jsx(\"svg\",{ref:svgRef});};export default ContributionHeatmap;","map":{"version":3,"names":["React","useEffect","useRef","d3","getColorForType","jsx","_jsx","ContributionHeatmap","_ref","data","svgRef","width","height","margin","top","right","bottom","left","select","current","selectAll","remove","svg","attr","append","parseDate","timeParse","formattedData","map","d","date","total","commits","pullRequests","issues","codeReviews","x","scaleTime","domain","extent","range","y","scaleBand","padding","enter","length","bandwidth","call","axisBottom","ticks","timeMonth","axisLeft","ref"],"sources":["C:/Users/Nam/Desktop/real-time-github-contribution-graph/frontend/src/components/ContributionHeatmap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { getColorForType } from '../utils/colorMapping';\r\n\r\nconst ContributionHeatmap = ({ data }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    const width = 800;\r\n    const height = 400;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 50 };\r\n\r\n    // Remove any previous SVG\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Create an SVG element\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // Parse the data\r\n    const parseDate = d3.timeParse('%Y-%m-%d');\r\n    const formattedData = data.map(d => ({\r\n      ...d,\r\n      date: parseDate(d.date),\r\n      total: d.commits + d.pullRequests + d.issues + d.codeReviews,\r\n    }));\r\n\r\n    // Set up scales\r\n    const x = d3.scaleTime()\r\n      .domain(d3.extent(formattedData, d => d.date))\r\n      .range([0, width]);\r\n\r\n    const y = d3.scaleBand()\r\n      .domain(['commits', 'pullRequests', 'issues', 'codeReviews'])\r\n      .range([height, 0])\r\n      .padding(0.1);\r\n\r\n    // Draw the heatmap rectangles\r\n    svg.selectAll('.rect')\r\n      .data(formattedData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => x(d.date))\r\n      .attr('y', d => y('commits')) // You can modify this to y(d.type) if 'type' is part of the data\r\n      .attr('width', width / formattedData.length - 1)\r\n      .attr('height', y.bandwidth())\r\n      .attr('fill', d => getColorForType('commits')); // Use getColorForType here\r\n\r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(d3.axisBottom(x).ticks(d3.timeMonth));\r\n\r\n    // Add Y axis\r\n    svg.append('g')\r\n      .call(d3.axisLeft(y));\r\n  }, [data]);\r\n\r\n  return (\r\n    <svg ref={svgRef} />\r\n  );\r\n};\r\n\r\nexport default ContributionHeatmap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}